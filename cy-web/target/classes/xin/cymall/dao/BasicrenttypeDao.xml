<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.cymall.dao.BasicrenttypeDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="xin.cymall.entity.Basicrenttype" id="basicrenttypeMap">
        <result property="basicrentId" column="basicRent_id"/>
        <result property="basicrentname" column="basicRentName"/>
        <result property="basicrentprice" column="basicRentPrice"/>
        <result property="remark" column="remark"/>
    </resultMap>

	<select id="get" resultType="xin.cymall.entity.Basicrenttype">
		select * from t_basicrenttype where basicRent_id = #{value}
	</select>

	<select id="getList" resultType="xin.cymall.entity.Basicrenttype">
		select * from t_basicrenttype t <include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by basicRent_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="getCount" resultType="int">
		select count(*) from t_basicrenttype t  <include refid="where_clause" />
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="basicrentId != null and basicrentId != ''"> and t.basicRent_id = #{basicrentId} </if>
    		<if test="basicrentIdVague != null and basicrentIdVague != ''"> and t.basicRent_id like concat('%',#{basicrentIdVague},'%') </if>
            <if test="basicrentname != null and basicrentname != ''"> and t.basicRentName = #{basicrentname} </if>
    		<if test="basicrentnameVague != null and basicrentnameVague != ''"> and t.basicRentName like concat('%',#{basicrentnameVague},'%') </if>
            <if test="basicrentprice != null and basicrentprice != ''"> and t.basicRentPrice = #{basicrentprice} </if>
    		<if test="basicrentpriceVague != null and basicrentpriceVague != ''"> and t.basicRentPrice like concat('%',#{basicrentpriceVague},'%') </if>
            <if test="remark != null and remark != ''"> and t.remark = #{remark} </if>
    		<if test="remarkVague != null and remarkVague != ''"> and t.remark like concat('%',#{remarkVague},'%') </if>
        </where>
    </sql>
	 
	<insert id="save" parameterType="xin.cymall.entity.Basicrenttype" useGeneratedKeys="true" keyProperty="basicrentId">
		insert into t_basicrenttype
		(
			`basicRentName`, 
			`basicRentPrice`, 
			`remark`
		)
		values
		(
			#{basicrentname}, 
			#{basicrentprice}, 
			#{remark}
		)
	</insert>
	 
	<update id="update" parameterType="xin.cymall.entity.Basicrenttype">
		update t_basicrenttype 
		<set>
			<if test="basicrentname != null">`basicRentName` = #{basicrentname}, </if>
			<if test="basicrentprice != null">`basicRentPrice` = #{basicrentprice}, </if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
		where basicRent_id = #{basicrentId}
	</update>
	
	<delete id="delete">
		delete from t_basicrenttype where basicRent_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_basicrenttype where basicRent_id in 
		<foreach item="basicrentId" collection="array" open="(" separator="," close=")">
			#{basicrentId}
		</foreach>
	</delete>

</mapper>