<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.cymall.dao.CustomerDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="xin.cymall.entity.Customer" id="customerMap">
        <result property="id" column="id"/>
        <result property="categoryId" column="category_id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="contact01" column="contact01"/>
        <result property="qq01" column="qq01"/>
        <result property="tel01" column="tel01"/>
        <result property="mobile01" column="mobile01"/>
        <result property="contact02" column="contact02"/>
        <result property="qq02" column="qq02"/>
        <result property="tel02" column="tel02"/>
        <result property="mobile02" column="mobile02"/>
        <result property="address" column="address"/>
        <result property="addressShipping" column="address_shipping"/>
        <result property="addressReceipt" column="address_receipt"/>
        <result property="py" column="py"/>
        <result property="bankName" column="bank_name"/>
        <result property="bankAccount" column="bank_account"/>
        <result property="taxNumber" column="tax_number"/>
        <result property="fax" column="fax"/>
        <result property="note" column="note"/>
    </resultMap>

	<select id="get" resultType="xin.cymall.entity.Customer">
		select * from t_customer where id = #{value}
	</select>

	<select id="getList" resultType="xin.cymall.entity.Customer">
		select * from t_customer t <include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="getCount" resultType="int">
		select count(*) from t_customer t  <include refid="where_clause" />
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="id != null and id != ''"> and t.id = #{id} </if>
    		<if test="idVague != null and idVague != ''"> and t.id like concat('%',#{idVague},'%') </if>
            <if test="categoryId != null and categoryId != ''"> and t.category_id = #{categoryId} </if>
    		<if test="categoryIdVague != null and categoryIdVague != ''"> and t.category_id like concat('%',#{categoryIdVague},'%') </if>
            <if test="code != null and code != ''"> and t.code = #{code} </if>
    		<if test="codeVague != null and codeVague != ''"> and t.code like concat('%',#{codeVague},'%') </if>
            <if test="name != null and name != ''"> and t.name = #{name} </if>
    		<if test="nameVague != null and nameVague != ''"> and t.name like concat('%',#{nameVague},'%') </if>
            <if test="contact01 != null and contact01 != ''"> and t.contact01 = #{contact01} </if>
    		<if test="contact01Vague != null and contact01Vague != ''"> and t.contact01 like concat('%',#{contact01Vague},'%') </if>
            <if test="qq01 != null and qq01 != ''"> and t.qq01 = #{qq01} </if>
    		<if test="qq01Vague != null and qq01Vague != ''"> and t.qq01 like concat('%',#{qq01Vague},'%') </if>
            <if test="tel01 != null and tel01 != ''"> and t.tel01 = #{tel01} </if>
    		<if test="tel01Vague != null and tel01Vague != ''"> and t.tel01 like concat('%',#{tel01Vague},'%') </if>
            <if test="mobile01 != null and mobile01 != ''"> and t.mobile01 = #{mobile01} </if>
    		<if test="mobile01Vague != null and mobile01Vague != ''"> and t.mobile01 like concat('%',#{mobile01Vague},'%') </if>
            <if test="contact02 != null and contact02 != ''"> and t.contact02 = #{contact02} </if>
    		<if test="contact02Vague != null and contact02Vague != ''"> and t.contact02 like concat('%',#{contact02Vague},'%') </if>
            <if test="qq02 != null and qq02 != ''"> and t.qq02 = #{qq02} </if>
    		<if test="qq02Vague != null and qq02Vague != ''"> and t.qq02 like concat('%',#{qq02Vague},'%') </if>
            <if test="tel02 != null and tel02 != ''"> and t.tel02 = #{tel02} </if>
    		<if test="tel02Vague != null and tel02Vague != ''"> and t.tel02 like concat('%',#{tel02Vague},'%') </if>
            <if test="mobile02 != null and mobile02 != ''"> and t.mobile02 = #{mobile02} </if>
    		<if test="mobile02Vague != null and mobile02Vague != ''"> and t.mobile02 like concat('%',#{mobile02Vague},'%') </if>
            <if test="address != null and address != ''"> and t.address = #{address} </if>
    		<if test="addressVague != null and addressVague != ''"> and t.address like concat('%',#{addressVague},'%') </if>
            <if test="addressShipping != null and addressShipping != ''"> and t.address_shipping = #{addressShipping} </if>
    		<if test="addressShippingVague != null and addressShippingVague != ''"> and t.address_shipping like concat('%',#{addressShippingVague},'%') </if>
            <if test="addressReceipt != null and addressReceipt != ''"> and t.address_receipt = #{addressReceipt} </if>
    		<if test="addressReceiptVague != null and addressReceiptVague != ''"> and t.address_receipt like concat('%',#{addressReceiptVague},'%') </if>
            <if test="py != null and py != ''"> and t.py = #{py} </if>
    		<if test="pyVague != null and pyVague != ''"> and t.py like concat('%',#{pyVague},'%') </if>
            <if test="bankName != null and bankName != ''"> and t.bank_name = #{bankName} </if>
    		<if test="bankNameVague != null and bankNameVague != ''"> and t.bank_name like concat('%',#{bankNameVague},'%') </if>
            <if test="bankAccount != null and bankAccount != ''"> and t.bank_account = #{bankAccount} </if>
    		<if test="bankAccountVague != null and bankAccountVague != ''"> and t.bank_account like concat('%',#{bankAccountVague},'%') </if>
            <if test="taxNumber != null and taxNumber != ''"> and t.tax_number = #{taxNumber} </if>
    		<if test="taxNumberVague != null and taxNumberVague != ''"> and t.tax_number like concat('%',#{taxNumberVague},'%') </if>
            <if test="fax != null and fax != ''"> and t.fax = #{fax} </if>
    		<if test="faxVague != null and faxVague != ''"> and t.fax like concat('%',#{faxVague},'%') </if>
            <if test="note != null and note != ''"> and t.note = #{note} </if>
    		<if test="noteVague != null and noteVague != ''"> and t.note like concat('%',#{noteVague},'%') </if>
        </where>
    </sql>
	 
	<insert id="save" parameterType="xin.cymall.entity.Customer" useGeneratedKeys="true" keyProperty="id">
		insert into t_customer
		(
			`category_id`, 
			`code`, 
			`name`, 
			`contact01`, 
			`qq01`, 
			`tel01`, 
			`mobile01`, 
			`contact02`, 
			`qq02`, 
			`tel02`, 
			`mobile02`, 
			`address`, 
			`address_shipping`, 
			`address_receipt`, 
			`py`, 
			`bank_name`, 
			`bank_account`, 
			`tax_number`, 
			`fax`, 
			`note`
		)
		values
		(
			#{categoryId}, 
			#{code}, 
			#{name}, 
			#{contact01}, 
			#{qq01}, 
			#{tel01}, 
			#{mobile01}, 
			#{contact02}, 
			#{qq02}, 
			#{tel02}, 
			#{mobile02}, 
			#{address}, 
			#{addressShipping}, 
			#{addressReceipt}, 
			#{py}, 
			#{bankName}, 
			#{bankAccount}, 
			#{taxNumber}, 
			#{fax}, 
			#{note}
		)
	</insert>
	 
	<update id="update" parameterType="xin.cymall.entity.Customer">
		update t_customer 
		<set>
			<if test="categoryId != null">`category_id` = #{categoryId}, </if>
			<if test="code != null">`code` = #{code}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="contact01 != null">`contact01` = #{contact01}, </if>
			<if test="qq01 != null">`qq01` = #{qq01}, </if>
			<if test="tel01 != null">`tel01` = #{tel01}, </if>
			<if test="mobile01 != null">`mobile01` = #{mobile01}, </if>
			<if test="contact02 != null">`contact02` = #{contact02}, </if>
			<if test="qq02 != null">`qq02` = #{qq02}, </if>
			<if test="tel02 != null">`tel02` = #{tel02}, </if>
			<if test="mobile02 != null">`mobile02` = #{mobile02}, </if>
			<if test="address != null">`address` = #{address}, </if>
			<if test="addressShipping != null">`address_shipping` = #{addressShipping}, </if>
			<if test="addressReceipt != null">`address_receipt` = #{addressReceipt}, </if>
			<if test="py != null">`py` = #{py}, </if>
			<if test="bankName != null">`bank_name` = #{bankName}, </if>
			<if test="bankAccount != null">`bank_account` = #{bankAccount}, </if>
			<if test="taxNumber != null">`tax_number` = #{taxNumber}, </if>
			<if test="fax != null">`fax` = #{fax}, </if>
			<if test="note != null">`note` = #{note}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from t_customer where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_customer where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>